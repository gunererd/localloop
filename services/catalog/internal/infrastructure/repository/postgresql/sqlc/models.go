// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"database/sql"
	"encoding/json"
	"time"

	"github.com/google/uuid"
)

type Category struct {
	ID          uuid.UUID      `json:"id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	ParentID    uuid.NullUUID  `json:"parentId"`
	CreatedAt   time.Time      `json:"createdAt"`
	UpdatedAt   time.Time      `json:"updatedAt"`
}

type CategoryField struct {
	CategoryID   uuid.UUID    `json:"categoryId"`
	FieldID      uuid.UUID    `json:"fieldId"`
	IsRequired   sql.NullBool `json:"isRequired"`
	DisplayOrder int32        `json:"displayOrder"`
}

type Field struct {
	ID          uuid.UUID      `json:"id"`
	Name        string         `json:"name"`
	Description sql.NullString `json:"description"`
	FieldTypeID uuid.UUID      `json:"fieldTypeId"`
	CreatedAt   time.Time      `json:"createdAt"`
	UpdatedAt   time.Time      `json:"updatedAt"`
}

type FieldType struct {
	ID                  uuid.UUID       `json:"id"`
	Name                string          `json:"name"`
	TypeDiscriminatorID uuid.UUID       `json:"typeDiscriminatorId"`
	Properties          json.RawMessage `json:"properties"`
	CreatedAt           time.Time       `json:"createdAt"`
	UpdatedAt           time.Time       `json:"updatedAt"`
}

type FieldTypeDiscriminator struct {
	ID               uuid.UUID       `json:"id"`
	Name             string          `json:"name"`
	Description      sql.NullString  `json:"description"`
	ValidationSchema json.RawMessage `json:"validationSchema"`
	CreatedAt        time.Time       `json:"createdAt"`
}
